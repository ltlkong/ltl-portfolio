import React, { ReactElement, useEffect } from 'react';
import { createUseStyles, useTheme } from 'react-jss';
import { ThemePrimary } from './styles/theme-primary';
import { toggleLoading } from './actions/loadingActions';
import { IRootState } from './store';
import { connect } from 'react-redux';

interface IStyles {
    theme: ThemePrimary;
}

const useStyles = createUseStyles({
    button: {
        backgroundColor: ({ theme }: IStyles) => theme.colorPrimary,
    },
});

interface IAppLayoutProps extends StateToProps {}

const AppLayout = ({ isLoading }: IAppLayoutProps): ReactElement => {
    const theme = useTheme<ThemePrimary>();
    const classes = useStyles({ theme });

    console.log(isLoading);

    return (
        <>
            <header>Tielin Li</header>
            <button className={classes.button} onclick={() => toggleLoading}>
                Hi
            </button>
        </>
    );
};

const mapDispatchToProps = {
    toggleLoading,
};

const mapStateToProps = ({ loading: { isLoading } }: IRootState) => ({
    isLoading,
});

type StateToProps = ReturnType<typeof mapStateToProps>;

export default connect(mapStateToProps, mapDispatchToProps)(AppLayout);
